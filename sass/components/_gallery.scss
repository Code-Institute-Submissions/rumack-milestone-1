.gallery {
    margin: 0 auto;
    max-width: 90%;
    // Using CSS Grid with repeat function and auto-fit made this layout really straightforward and perfectly responsive even without media queries
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));    
    grid-row-gap: 5rem;
    grid-column-gap: 5rem;
    // One minor media query for fine tuning - to avoid obnoxiously big single column images on mobile
    @media only screen and (max-width: 37.5em) {
        grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    }

    &__album {
        width: 100%;
        height: 100%;
        position: relative;
        box-shadow: 0 10px 6px -10px rgba($color-black, .5);

        &:hover > .gallery__overlay {
            opacity: 1;
            visibility: visible;
        }
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    &__link {
        text-decoration: none;
        transition: all .5s;

        &:hover > .gallery__icon {
            transform: scale(1.05);
            color: white;
        }
    }

    &__icon {
        font-size: 3rem;
        color: $color-white;
    }

    &__overlay {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        transition: all .5s;

        opacity: 0;
        visibility: hidden;

        display: flex;
        justify-content: center;
        align-items: center;

        @media only screen and (max-width: 75em) {
            opacity: 1;
            visibility: visible;
        }
    }

    &__overlay--1 {
        background-color: rgba($color-black, $overlay-transparencies-setting); 
    }

    &__overlay--2 {
        background-color: rgba($color-primary, $overlay-transparencies-setting);
    }

    &__overlay--3 {
        background-color: rgba($color-grey, $overlay-transparencies-setting);
    }

    &__overlay--4 {
        background-color: rgba($color-black, $overlay-transparencies-setting);
    }

    &__overlay--5 {
        background-color: rgba($color-grey, $overlay-transparencies-setting);
    }

    &__overlay--6 {
      background-color: rgba($color-black, $overlay-transparencies-setting); 
    }

    &__overlay--7 {
        background-color: rgba($color-primary, $overlay-transparencies-setting); 
    }

    &__overlay--8 {
        background-color: rgba($color-grey, $overlay-transparencies-setting);
    }

    &__overlay--9 {
        background-color: rgba($color-black, $overlay-transparencies-setting);
    }

    &__overlay--10 {
        background-color: rgba($color-primary, $overlay-transparencies-setting);
    }
}

// Note on the album layout. It works but is clumsy. The problem is that it uses a hack ('radio button / target hack') to allow the user to browse the images in an album. Thanks again to Jonas Schmedtmann for that one. It's pushing that hack to its limits, and because the inputs and labels need to be siblings of the 'display' element, I can't create a responsive layout with grid or flexbox or any other way. So the solution is a pure html/css one, and not very satisfactory, but with a bit of javascript it will be cleaned up before production to be more flexible and maintainable.

// ALBUM STYLING

.album {
    height: 100%;
    width: 100%;

    background-color: rgba(black, 0.94);
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 20;
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    &__bg {
        width: 100%;
        height: 100%;
        display: grid;
        grid-template-rows: 69% 29%;
        grid-template-columns: repeat(5, 1fr);
        grid-row-gap: 5rem;
        position: relative;
        align-items: center;
        justify-items: center;

        @media only screen and (max-width: 75em) and (orientation: landscape) {
             grid-row-gap: 2rem;
        }
    }

    &__close:link,
    &__close:visited {
        position: absolute;
        top: 5rem;
        right: 5rem;
        background-color: rgba($color-black, 0.0);
        color: $color-white;
        line-height: 1;
        font-size: 3rem;
        font-weight: 400;
        text-decoration: none;
        transition: all .2s;
    }

    &__close:hover {
        border: 1px solid $color-white;
    }

    &__display {
        grid-row: 1 / span 1;
        grid-column: 1 / -1;

        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__thumbnail {
        grid-row: 2 / span 1;
        background-color: rgba($color-white, 0.0);
        cursor: pointer;
        z-index: 20; 

        display: flex;
        justify-content: center;
    }

    &__img {
        
        width: 70%;
        max-width: 70rem;
        height: auto;
        object-fit: cover;
        margin-top: 8rem;
        display: none;

        border: 1rem solid $color-white;
        
        border-radius: .2rem;
        transition: all .3s;

        @media only screen and (max-width: 75em) and (orientation: landscape) {
            //width: 50%;
            max-width: 50rem; 
        }
    }

    &__img--small {
        width: 50%;
        height: auto;
        object-fit: cover;
        box-shadow: 0 10px 6px -10px rgba($color-grey, .5);
        border-bottom: 1px solid transparent;
        transition: all .3s;

        &:hover {
            filter: brightness(130%);       
        }
    }

    &__radio {
       display: none;
    }

    // FOLDER ONE

    // Radio buttton actions - show appropriate display image

    &__bg > &__radio--1:checked ~ &__display > &__img:nth-child(1) {
        animation: fade-in 1s;
        display: block;
    }  

    &__bg > &__radio--2:checked ~ &__display > &__img:nth-child(2) {
        animation: fade-in 1s;
        display: block;
    }

    &__bg > &__radio--3:checked ~ &__display > &__img:nth-child(3) {
        animation: fade-in 1s;
        display: block;
    }

    &__bg > &__radio--4:checked ~ &__display > &__img:nth-child(4) {
        animation: fade-in 1s;
        display: block;
    }

    &__bg > &__radio--5:checked ~ &__display > &__img:nth-child(5) {
        animation: fade-in 1s;
        display: block;
    }

    &__bg > &__radio--6:checked ~ &__display > &__img:nth-child(6) {
        animation: fade-in 1s;
        display: block;
    }

    // Radio-buttton actions - scale, darken and adjust box-shadow of active thumbnail image


    &__bg > &__radio--1:checked + label > img {
        transform: scale(0.8);
        box-shadow: 0 6px 5px -10px rgba($color-grey, .5);
        filter: brightness(90%);
    }  

    &__bg > &__radio--2:checked + label > img {
        transform: scale(0.9);
        box-shadow: 0 6px 5px -10px rgba($color-grey, .5);
        filter: brightness(90%);
    }  

    &__bg > &__radio--3:checked + label > img {
        transform: scale(0.9);
        box-shadow: 0 6px 5px -10px rgba($color-grey, .5);
        filter: brightness(90%);
    }  

    &__bg > &__radio--4:checked + label > img {
        transform: scale(0.9);
        box-shadow: 0 6px 5px -10px rgba($color-grey, .5);
        filter: brightness(90%);
    }  

    &__bg > &__radio--5:checked + label > img {
        transform: scale(0.9);
        box-shadow: 0 6px 5px -10px rgba($color-grey, .5);
        filter: brightness(90%);
    } 
    
    &__bg > &__radio--6:checked + label > img {
        transform: scale(0.9);
        box-shadow: 0 6px 5px -10px rgba($color-grey, .5);
        filter: brightness(90%);
    } 

    &:target {
        opacity: 1;
        visibility: visible;
    }

    &:target &__content {
        opacity: 1;
        transform: scale(1);
    }
}
